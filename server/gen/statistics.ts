// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.4
//   protoc               v5.28.0
// source: statistics.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "statistics";

export interface Statistic {
  id: number;
  date: string;
  day: number;
  month: number;
  year: number;
  amount: number;
  orders: number;
  users: number;
  reports: number;
  createdAt?: string | undefined;
  updatedAt?: string | undefined;
}

export interface GetStatisticsRequest {
  date: string;
}

export interface SetStatisticsRequest {
  date: string;
  amount?: number | undefined;
  orders?: number | undefined;
  users?: number | undefined;
  reports?: number | undefined;
}

export interface Statistics {
  statistics: Statistic[];
}

export const STATISTICS_PACKAGE_NAME = "statistics";

export interface StatisticServiceClient {
  getStatistics(request: GetStatisticsRequest): Observable<Statistics>;

  setStatistics(request: SetStatisticsRequest): Observable<Statistic>;
}

export interface StatisticServiceController {
  getStatistics(request: GetStatisticsRequest): Promise<Statistics> | Observable<Statistics> | Statistics;

  setStatistics(request: SetStatisticsRequest): Promise<Statistic> | Observable<Statistic> | Statistic;
}

export function StatisticServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getStatistics", "setStatistics"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("StatisticService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("StatisticService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const STATISTIC_SERVICE_NAME = "StatisticService";
